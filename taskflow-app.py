# -*- coding: utf-8 -*-
"""taskflow.py

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1t10exQ8WsNJ-Q-XiW1k_CGKPnEcAAugJ
"""

import requests

# Define the Pokédex API base URL
POKEDEX_API_URL = "https://pokeapi.co/api/v2/pokemon/"

def fetch_pokemon_data(pokemon_name):
    """
    Fetch data for a specific Pokémon from the Pokédex API.

    Args:
        pokemon_name (str): The name of the Pokémon to fetch.

    Returns:
        dict: A dictionary containing information about the Pokémon.
    """
    # Construct the URL for the specific Pokémon using its name
    url = f"{POKEDEX_API_URL}{pokemon_name.lower()}"

    # Send a GET request to the Pokédex API to fetch the data
    response = requests.get(url)

    # Check if the request was successful (status code 200)
    if response.status_code == 200:
        return response.json()
    else:
        # Print an error message if the request failed
        print(f"Failed to fetch data for {pokemon_name}. Status code: {response.status_code}")
        return None

def categorize_pokemon_by_type(pokemon_data):
    """
    Categorize Pokémon based on their types.

    Args:
        pokemon_data (dict): Data of a Pokémon from the Pokédex API.

    Returns:
        dict: A dictionary where keys are types, and values are lists of Pokémon names with that type.
    """
    categorized_pokemon = {}

    # Extract the 'types' and 'name' information from the Pokémon data
    types = pokemon_data["types"]
    name = pokemon_data["name"]

    # Iterate through the types of the Pokémon
    for type_info in types:
        type_name = type_info["type"]["name"]
        # If the type is not already a key in the categorized_pokemon dictionary, add it
        if type_name not in categorized_pokemon:
            categorized_pokemon[type_name] = []
        # Append the Pokémon's name to the corresponding type in the dictionary
        categorized_pokemon[type_name].append(name)

    return categorized_pokemon

def main():
    # List of Pokémon names to fetch
    pokemon_names = ["pikachu", "charizard", "squirtle", "bulbasaur", "jigglypuff"]

    categorized_pokemon = {}

    # Iterate through the list of Pokémon names
    for name in pokemon_names:
        # Fetch data for each Pokémon
        pokemon_data = fetch_pokemon_data(name)
        if pokemon_data:
            # Categorize the Pokémon by type and update the categorized_pokemon dictionary
            categorized_pokemon.update(categorize_pokemon_by_type(pokemon_data))

    # Display the results
    for type_name, pokemon_list in categorized_pokemon.items():
        # Capitalize the type name and print the Pokémon names for each type
        print(f"{type_name.capitalize()} Pokémon:")
        for pokemon_name in pokemon_list:
            print(f"  - {pokemon_name.capitalize()}")

if __name__ == "__main__":
    main()